package: org.robovm.apple.mediatoolbox
include: [foundation.yaml, corefoundation.yaml, coremedia.yaml, coreaudio.yaml, audiotoolbox.yaml]
library: MediaToolbox
framework: MediaToolbox
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/MediaToolbox.framework/Headers/MediaToolbox.h
typedefs:
    MTAudioProcessingTapRef: MTAudioProcessingTap

enums:
    MTAudioProcessingTapCreationFlags: { first: kMTAudioProcessingTapCreationFlag_PreEffects, bits: true, marshaler: Bits.AsMachineSizedIntMarshaler }
    MTAudioProcessingTapFlags: { first: kMTAudioProcessingTapFlag_StartOfStream, bits: true, marshaler: Bits.AsMachineSizedIntMarshaler }

classes:
    # Opaque Types
    MTAudioProcessingTap:
        extends: CFType
    opaqueMTAudioProcessingTap:
        name: MTAudioProcessingTap
        extends: CFType

    # Structs
    MTAudioProcessingTapCallbacks:
        name: MTAudioProcessingTapCallbacksStruct
        visibility: ''
        finalize:
            name: finalizeCbk
        clientInfo:
            type: '@Pointer long'

protocols: {}

functions:
    (MT.*)GetTypeID:
        class: '#{g[0]}'
        name: getClassTypeID

    # MTAudioProcessingTap
    MTAudioProcessingTap(Create):
        class: MTAudioProcessingTap
        name: '#{g[0]}'
        visibility: protected
        parameters:
            flags:
                type: MTAudioProcessingTapCreationFlags
    MTAudioProcessingTap(GetSourceAudio):
        class: MTAudioProcessingTap
        name: '#{g[0]}'
        static: true
        parameters:
            flagsOut:
                type: MTAudioProcessingTapFlags.MTAudioProcessingTapFlagsPtr
            timeRangeOut:
                type: CMTimeRange.CMTimeRangePtr
    MTAudioProcessingTap(GetStorage):
        class: MTAudioProcessingTap
        name: '#{g[0]}'
        return_type: '@Pointer long'
        visibility: protected
    MTAudioProcessingTap(GetSourceAudio):
        class: MTAudioProcessingTap
        name: '#{g[0]}0'
        visibility: protected
        parameters:
            flagsOut:
                type: MTAudioProcessingTapMutableFlags

    MTAudioProcessingTap(.*):
        class: MTAudioProcessingTap
        name: '#{g[0]}'

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?MT.*):
        class: MediaToolbox
        name: 'Function__#{g[0]}'

values:
    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?MT.*):
        class: MediaToolbox
        name: 'Value__#{g[0]}'

constants:
    kMTAudioProcessingTapCallbacksVersion.*:
        exclude: true
      
    # Make sure we don't miss any constants if new ones are introduced in a later version        
    (k?MT.*):
        class: MediaToolbox
        name: 'Constant__#{g[0]}'
