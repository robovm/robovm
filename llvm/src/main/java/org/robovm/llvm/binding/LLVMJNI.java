/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.robovm.llvm.binding;

public class LLVMJNI {
  public final static native long MemoryBufferRefOut_value_get(long jarg1, MemoryBufferRefOut jarg1_);
  public final static native long new_MemoryBufferRefOut();
  public final static native void delete_MemoryBufferRefOut(long jarg1);
  public final static native long ModuleRefOut_value_get(long jarg1, ModuleRefOut jarg1_);
  public final static native long new_ModuleRefOut();
  public final static native void delete_ModuleRefOut(long jarg1);
  public final static native long ModuleProviderRefOut_value_get(long jarg1, ModuleProviderRefOut jarg1_);
  public final static native long new_ModuleProviderRefOut();
  public final static native void delete_ModuleProviderRefOut(long jarg1);
  public final static native String StringOut_value_get(long jarg1, StringOut jarg1_);
  public final static native long new_StringOut();
  public final static native void delete_StringOut(long jarg1);
  public final static native int IntOut_value_get(long jarg1, IntOut jarg1_);
  public final static native long new_IntOut();
  public final static native void delete_IntOut(long jarg1);
  public final static native long new_TypeRefArray(int jarg1);
  public final static native void delete_TypeRefArray(long jarg1);
  public final static native long TypeRefArray_get(long jarg1, TypeRefArray jarg1_, int jarg2);
  public final static native void TypeRefArray_set(long jarg1, TypeRefArray jarg1_, int jarg2, long jarg3);
  public final static native long new_BasicBlockRefArray(int jarg1);
  public final static native void delete_BasicBlockRefArray(long jarg1);
  public final static native long BasicBlockRefArray_get(long jarg1, BasicBlockRefArray jarg1_, int jarg2);
  public final static native void BasicBlockRefArray_set(long jarg1, BasicBlockRefArray jarg1_, int jarg2, long jarg3);
  public final static native long new_ValueRefArray(int jarg1);
  public final static native void delete_ValueRefArray(long jarg1);
  public final static native long ValueRefArray_get(long jarg1, ValueRefArray jarg1_, int jarg2);
  public final static native void ValueRefArray_set(long jarg1, ValueRefArray jarg1_, int jarg2, long jarg3);
  public final static native long new_LongArray(int jarg1);
  public final static native void delete_LongArray(long jarg1);
  public final static native long LongArray_get(long jarg1, LongArray jarg1_, int jarg2);
  public final static native void LongArray_set(long jarg1, LongArray jarg1_, int jarg2, long jarg3);
  public final static native long new_IntArray(int jarg1);
  public final static native void delete_IntArray(long jarg1);
  public final static native int IntArray_get(long jarg1, IntArray jarg1_, int jarg2);
  public final static native void IntArray_set(long jarg1, IntArray jarg1_, int jarg2, int jarg3);
  public final static native void InitializeCore(long jarg1);
  public final static native void Shutdown();
  public final static native void DisposeMessage(String jarg1);
  public final static native long ContextCreate();
  public final static native long GetGlobalContext();
  public final static native void ContextDispose(long jarg1);
  public final static native int GetMDKindIDInContext(long jarg1, String jarg2);
  public final static native int GetMDKindID(String jarg1);
  public final static native long ModuleCreateWithName(String jarg1);
  public final static native long ModuleCreateWithNameInContext(String jarg1, long jarg2);
  public final static native void DisposeModule(long jarg1);
  public final static native String GetDataLayout(long jarg1);
  public final static native void SetDataLayout(long jarg1, String jarg2);
  public final static native String GetTarget(long jarg1);
  public final static native void SetTarget(long jarg1, String jarg2);
  public final static native void DumpModule(long jarg1);
  public final static native boolean PrintModuleToFile(long jarg1, String jarg2, long jarg3, StringOut jarg3_);
  public final static native void SetModuleInlineAsm(long jarg1, String jarg2);
  public final static native long GetModuleContext(long jarg1);
  public final static native long GetTypeByName(long jarg1, String jarg2);
  public final static native int GetNamedMetadataNumOperands(long jarg1, String jarg2);
  public final static native void GetNamedMetadataOperands(long jarg1, String jarg2, long jarg3, ValueRefArray jarg3_);
  public final static native void AddNamedMetadataOperand(long jarg1, String jarg2, long jarg3);
  public final static native long AddFunction(long jarg1, String jarg2, long jarg3);
  public final static native long GetNamedFunction(long jarg1, String jarg2);
  public final static native long GetFirstFunction(long jarg1);
  public final static native long GetLastFunction(long jarg1);
  public final static native long GetNextFunction(long jarg1);
  public final static native long GetPreviousFunction(long jarg1);
  public final static native int GetTypeKind(long jarg1);
  public final static native boolean TypeIsSized(long jarg1);
  public final static native long GetTypeContext(long jarg1);
  public final static native long Int1TypeInContext(long jarg1);
  public final static native long Int8TypeInContext(long jarg1);
  public final static native long Int16TypeInContext(long jarg1);
  public final static native long Int32TypeInContext(long jarg1);
  public final static native long Int64TypeInContext(long jarg1);
  public final static native long IntTypeInContext(long jarg1, int jarg2);
  public final static native long Int1Type();
  public final static native long Int8Type();
  public final static native long Int16Type();
  public final static native long Int32Type();
  public final static native long Int64Type();
  public final static native long IntType(int jarg1);
  public final static native int GetIntTypeWidth(long jarg1);
  public final static native long HalfTypeInContext(long jarg1);
  public final static native long FloatTypeInContext(long jarg1);
  public final static native long DoubleTypeInContext(long jarg1);
  public final static native long X86FP80TypeInContext(long jarg1);
  public final static native long FP128TypeInContext(long jarg1);
  public final static native long PPCFP128TypeInContext(long jarg1);
  public final static native long HalfType();
  public final static native long FloatType();
  public final static native long DoubleType();
  public final static native long X86FP80Type();
  public final static native long FP128Type();
  public final static native long PPCFP128Type();
  public final static native long FunctionType(long jarg1, long jarg2, TypeRefArray jarg2_, int jarg3, boolean jarg4);
  public final static native boolean IsFunctionVarArg(long jarg1);
  public final static native long GetReturnType(long jarg1);
  public final static native int CountParamTypes(long jarg1);
  public final static native void GetParamTypes(long jarg1, long jarg2, TypeRefArray jarg2_);
  public final static native long StructTypeInContext(long jarg1, long jarg2, TypeRefArray jarg2_, int jarg3, boolean jarg4);
  public final static native long StructType(long jarg1, TypeRefArray jarg1_, int jarg2, boolean jarg3);
  public final static native long StructCreateNamed(long jarg1, String jarg2);
  public final static native String GetStructName(long jarg1);
  public final static native void StructSetBody(long jarg1, long jarg2, TypeRefArray jarg2_, int jarg3, boolean jarg4);
  public final static native int CountStructElementTypes(long jarg1);
  public final static native void GetStructElementTypes(long jarg1, long jarg2, TypeRefArray jarg2_);
  public final static native boolean IsPackedStruct(long jarg1);
  public final static native boolean IsOpaqueStruct(long jarg1);
  public final static native long GetElementType(long jarg1);
  public final static native long ArrayType(long jarg1, int jarg2);
  public final static native int GetArrayLength(long jarg1);
  public final static native long PointerType(long jarg1, int jarg2);
  public final static native int GetPointerAddressSpace(long jarg1);
  public final static native long VectorType(long jarg1, int jarg2);
  public final static native int GetVectorSize(long jarg1);
  public final static native long VoidTypeInContext(long jarg1);
  public final static native long LabelTypeInContext(long jarg1);
  public final static native long X86MMXTypeInContext(long jarg1);
  public final static native long VoidType();
  public final static native long LabelType();
  public final static native long X86MMXType();
  public final static native long TypeOf(long jarg1);
  public final static native String GetValueName(long jarg1);
  public final static native void SetValueName(long jarg1, String jarg2);
  public final static native void DumpValue(long jarg1);
  public final static native void ReplaceAllUsesWith(long jarg1, long jarg2);
  public final static native boolean IsConstant(long jarg1);
  public final static native boolean IsUndef(long jarg1);
  public final static native long IsAArgument(long jarg1);
  public final static native long IsABasicBlock(long jarg1);
  public final static native long IsAInlineAsm(long jarg1);
  public final static native long IsAMDNode(long jarg1);
  public final static native long IsAMDString(long jarg1);
  public final static native long IsAUser(long jarg1);
  public final static native long IsAConstant(long jarg1);
  public final static native long IsABlockAddress(long jarg1);
  public final static native long IsAConstantAggregateZero(long jarg1);
  public final static native long IsAConstantArray(long jarg1);
  public final static native long IsAConstantExpr(long jarg1);
  public final static native long IsAConstantFP(long jarg1);
  public final static native long IsAConstantInt(long jarg1);
  public final static native long IsAConstantPointerNull(long jarg1);
  public final static native long IsAConstantStruct(long jarg1);
  public final static native long IsAConstantVector(long jarg1);
  public final static native long IsAGlobalValue(long jarg1);
  public final static native long IsAFunction(long jarg1);
  public final static native long IsAGlobalAlias(long jarg1);
  public final static native long IsAGlobalVariable(long jarg1);
  public final static native long IsAUndefValue(long jarg1);
  public final static native long IsAInstruction(long jarg1);
  public final static native long IsABinaryOperator(long jarg1);
  public final static native long IsACallInst(long jarg1);
  public final static native long IsAIntrinsicInst(long jarg1);
  public final static native long IsADbgInfoIntrinsic(long jarg1);
  public final static native long IsADbgDeclareInst(long jarg1);
  public final static native long IsAMemIntrinsic(long jarg1);
  public final static native long IsAMemCpyInst(long jarg1);
  public final static native long IsAMemMoveInst(long jarg1);
  public final static native long IsAMemSetInst(long jarg1);
  public final static native long IsACmpInst(long jarg1);
  public final static native long IsAFCmpInst(long jarg1);
  public final static native long IsAICmpInst(long jarg1);
  public final static native long IsAExtractElementInst(long jarg1);
  public final static native long IsAGetElementPtrInst(long jarg1);
  public final static native long IsAInsertElementInst(long jarg1);
  public final static native long IsAInsertValueInst(long jarg1);
  public final static native long IsALandingPadInst(long jarg1);
  public final static native long IsAPHINode(long jarg1);
  public final static native long IsASelectInst(long jarg1);
  public final static native long IsAShuffleVectorInst(long jarg1);
  public final static native long IsAStoreInst(long jarg1);
  public final static native long IsATerminatorInst(long jarg1);
  public final static native long IsABranchInst(long jarg1);
  public final static native long IsAIndirectBrInst(long jarg1);
  public final static native long IsAInvokeInst(long jarg1);
  public final static native long IsAReturnInst(long jarg1);
  public final static native long IsASwitchInst(long jarg1);
  public final static native long IsAUnreachableInst(long jarg1);
  public final static native long IsAResumeInst(long jarg1);
  public final static native long IsAUnaryInstruction(long jarg1);
  public final static native long IsAAllocaInst(long jarg1);
  public final static native long IsACastInst(long jarg1);
  public final static native long IsABitCastInst(long jarg1);
  public final static native long IsAFPExtInst(long jarg1);
  public final static native long IsAFPToSIInst(long jarg1);
  public final static native long IsAFPToUIInst(long jarg1);
  public final static native long IsAFPTruncInst(long jarg1);
  public final static native long IsAIntToPtrInst(long jarg1);
  public final static native long IsAPtrToIntInst(long jarg1);
  public final static native long IsASExtInst(long jarg1);
  public final static native long IsASIToFPInst(long jarg1);
  public final static native long IsATruncInst(long jarg1);
  public final static native long IsAUIToFPInst(long jarg1);
  public final static native long IsAZExtInst(long jarg1);
  public final static native long IsAExtractValueInst(long jarg1);
  public final static native long IsALoadInst(long jarg1);
  public final static native long IsAVAArgInst(long jarg1);
  public final static native long GetFirstUse(long jarg1);
  public final static native long GetNextUse(long jarg1);
  public final static native long GetUser(long jarg1);
  public final static native long GetUsedValue(long jarg1);
  public final static native long GetOperand(long jarg1, int jarg2);
  public final static native void SetOperand(long jarg1, int jarg2, long jarg3);
  public final static native int GetNumOperands(long jarg1);
  public final static native long ConstNull(long jarg1);
  public final static native long ConstAllOnes(long jarg1);
  public final static native long GetUndef(long jarg1);
  public final static native boolean IsNull(long jarg1);
  public final static native long ConstPointerNull(long jarg1);
  public final static native long ConstInt(long jarg1, java.math.BigInteger jarg2, boolean jarg3);
  public final static native long ConstIntOfArbitraryPrecision(long jarg1, int jarg2, long jarg3, LongArray jarg3_);
  public final static native long ConstIntOfString(long jarg1, String jarg2, byte jarg3);
  public final static native long ConstReal(long jarg1, double jarg2);
  public final static native long ConstRealOfString(long jarg1, String jarg2);
  public final static native java.math.BigInteger ConstIntGetZExtValue(long jarg1);
  public final static native long ConstIntGetSExtValue(long jarg1);
  public final static native long ConstStringInContext(long jarg1, String jarg2, boolean jarg4);
  public final static native long ConstString(String jarg1, boolean jarg3);
  public final static native long ConstStructInContext(long jarg1, long jarg2, ValueRefArray jarg2_, int jarg3, boolean jarg4);
  public final static native long ConstStruct(long jarg1, ValueRefArray jarg1_, int jarg2, boolean jarg3);
  public final static native long ConstArray(long jarg1, long jarg2, ValueRefArray jarg2_, int jarg3);
  public final static native long ConstNamedStruct(long jarg1, long jarg2, ValueRefArray jarg2_, int jarg3);
  public final static native long ConstVector(long jarg1, ValueRefArray jarg1_, int jarg2);
  public final static native int GetConstOpcode(long jarg1);
  public final static native long AlignOf(long jarg1);
  public final static native long SizeOf(long jarg1);
  public final static native long ConstNeg(long jarg1);
  public final static native long ConstNSWNeg(long jarg1);
  public final static native long ConstNUWNeg(long jarg1);
  public final static native long ConstFNeg(long jarg1);
  public final static native long ConstNot(long jarg1);
  public final static native long ConstAdd(long jarg1, long jarg2);
  public final static native long ConstNSWAdd(long jarg1, long jarg2);
  public final static native long ConstNUWAdd(long jarg1, long jarg2);
  public final static native long ConstFAdd(long jarg1, long jarg2);
  public final static native long ConstSub(long jarg1, long jarg2);
  public final static native long ConstNSWSub(long jarg1, long jarg2);
  public final static native long ConstNUWSub(long jarg1, long jarg2);
  public final static native long ConstFSub(long jarg1, long jarg2);
  public final static native long ConstMul(long jarg1, long jarg2);
  public final static native long ConstNSWMul(long jarg1, long jarg2);
  public final static native long ConstNUWMul(long jarg1, long jarg2);
  public final static native long ConstFMul(long jarg1, long jarg2);
  public final static native long ConstUDiv(long jarg1, long jarg2);
  public final static native long ConstSDiv(long jarg1, long jarg2);
  public final static native long ConstExactSDiv(long jarg1, long jarg2);
  public final static native long ConstFDiv(long jarg1, long jarg2);
  public final static native long ConstURem(long jarg1, long jarg2);
  public final static native long ConstSRem(long jarg1, long jarg2);
  public final static native long ConstFRem(long jarg1, long jarg2);
  public final static native long ConstAnd(long jarg1, long jarg2);
  public final static native long ConstOr(long jarg1, long jarg2);
  public final static native long ConstXor(long jarg1, long jarg2);
  public final static native long ConstICmp(int jarg1, long jarg2, long jarg3);
  public final static native long ConstFCmp(int jarg1, long jarg2, long jarg3);
  public final static native long ConstShl(long jarg1, long jarg2);
  public final static native long ConstLShr(long jarg1, long jarg2);
  public final static native long ConstAShr(long jarg1, long jarg2);
  public final static native long ConstGEP(long jarg1, long jarg2, ValueRefArray jarg2_, int jarg3);
  public final static native long ConstInBoundsGEP(long jarg1, long jarg2, ValueRefArray jarg2_, int jarg3);
  public final static native long ConstTrunc(long jarg1, long jarg2);
  public final static native long ConstSExt(long jarg1, long jarg2);
  public final static native long ConstZExt(long jarg1, long jarg2);
  public final static native long ConstFPTrunc(long jarg1, long jarg2);
  public final static native long ConstFPExt(long jarg1, long jarg2);
  public final static native long ConstUIToFP(long jarg1, long jarg2);
  public final static native long ConstSIToFP(long jarg1, long jarg2);
  public final static native long ConstFPToUI(long jarg1, long jarg2);
  public final static native long ConstFPToSI(long jarg1, long jarg2);
  public final static native long ConstPtrToInt(long jarg1, long jarg2);
  public final static native long ConstIntToPtr(long jarg1, long jarg2);
  public final static native long ConstBitCast(long jarg1, long jarg2);
  public final static native long ConstZExtOrBitCast(long jarg1, long jarg2);
  public final static native long ConstSExtOrBitCast(long jarg1, long jarg2);
  public final static native long ConstTruncOrBitCast(long jarg1, long jarg2);
  public final static native long ConstPointerCast(long jarg1, long jarg2);
  public final static native long ConstIntCast(long jarg1, long jarg2, boolean jarg3);
  public final static native long ConstFPCast(long jarg1, long jarg2);
  public final static native long ConstSelect(long jarg1, long jarg2, long jarg3);
  public final static native long ConstExtractElement(long jarg1, long jarg2);
  public final static native long ConstInsertElement(long jarg1, long jarg2, long jarg3);
  public final static native long ConstShuffleVector(long jarg1, long jarg2, long jarg3);
  public final static native long ConstExtractValue(long jarg1, long jarg2, IntArray jarg2_, int jarg3);
  public final static native long ConstInsertValue(long jarg1, long jarg2, long jarg3, IntArray jarg3_, int jarg4);
  public final static native long ConstInlineAsm(long jarg1, String jarg2, String jarg3, boolean jarg4, boolean jarg5);
  public final static native long BlockAddress(long jarg1, long jarg2);
  public final static native long GetGlobalParent(long jarg1);
  public final static native boolean IsDeclaration(long jarg1);
  public final static native int GetLinkage(long jarg1);
  public final static native void SetLinkage(long jarg1, int jarg2);
  public final static native String GetSection(long jarg1);
  public final static native void SetSection(long jarg1, String jarg2);
  public final static native int GetVisibility(long jarg1);
  public final static native void SetVisibility(long jarg1, int jarg2);
  public final static native int GetAlignment(long jarg1);
  public final static native void SetAlignment(long jarg1, int jarg2);
  public final static native long AddGlobal(long jarg1, long jarg2, String jarg3);
  public final static native long AddGlobalInAddressSpace(long jarg1, long jarg2, String jarg3, int jarg4);
  public final static native long GetNamedGlobal(long jarg1, String jarg2);
  public final static native long GetFirstGlobal(long jarg1);
  public final static native long GetLastGlobal(long jarg1);
  public final static native long GetNextGlobal(long jarg1);
  public final static native long GetPreviousGlobal(long jarg1);
  public final static native void DeleteGlobal(long jarg1);
  public final static native long GetInitializer(long jarg1);
  public final static native void SetInitializer(long jarg1, long jarg2);
  public final static native boolean IsThreadLocal(long jarg1);
  public final static native void SetThreadLocal(long jarg1, boolean jarg2);
  public final static native boolean IsGlobalConstant(long jarg1);
  public final static native void SetGlobalConstant(long jarg1, boolean jarg2);
  public final static native int GetThreadLocalMode(long jarg1);
  public final static native void SetThreadLocalMode(long jarg1, int jarg2);
  public final static native boolean IsExternallyInitialized(long jarg1);
  public final static native void SetExternallyInitialized(long jarg1, boolean jarg2);
  public final static native long AddAlias(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native void DeleteFunction(long jarg1);
  public final static native int GetIntrinsicID(long jarg1);
  public final static native int GetFunctionCallConv(long jarg1);
  public final static native void SetFunctionCallConv(long jarg1, int jarg2);
  public final static native String GetGC(long jarg1);
  public final static native void SetGC(long jarg1, String jarg2);
  public final static native void AddFunctionAttr(long jarg1, int jarg2);
  public final static native void AddTargetDependentFunctionAttr(long jarg1, String jarg2, String jarg3);
  public final static native int GetFunctionAttr(long jarg1);
  public final static native void RemoveFunctionAttr(long jarg1, int jarg2);
  public final static native int CountParams(long jarg1);
  public final static native void GetParams(long jarg1, long jarg2, ValueRefArray jarg2_);
  public final static native long GetParam(long jarg1, int jarg2);
  public final static native long GetParamParent(long jarg1);
  public final static native long GetFirstParam(long jarg1);
  public final static native long GetLastParam(long jarg1);
  public final static native long GetNextParam(long jarg1);
  public final static native long GetPreviousParam(long jarg1);
  public final static native void AddAttribute(long jarg1, int jarg2);
  public final static native void RemoveAttribute(long jarg1, int jarg2);
  public final static native int GetAttribute(long jarg1);
  public final static native void SetParamAlignment(long jarg1, int jarg2);
  public final static native long MDStringInContext(long jarg1, String jarg2);
  public final static native long MDString(String jarg1);
  public final static native long MDNodeInContext(long jarg1, long jarg2, ValueRefArray jarg2_, int jarg3);
  public final static native long MDNode(long jarg1, ValueRefArray jarg1_, int jarg2);
  public final static native String GetMDString(long jarg1, long jarg2, IntOut jarg2_);
  public final static native int GetMDNodeNumOperands(long jarg1);
  public final static native void GetMDNodeOperands(long jarg1, long jarg2, ValueRefArray jarg2_);
  public final static native long BasicBlockAsValue(long jarg1);
  public final static native boolean ValueIsBasicBlock(long jarg1);
  public final static native long ValueAsBasicBlock(long jarg1);
  public final static native long GetBasicBlockParent(long jarg1);
  public final static native long GetBasicBlockTerminator(long jarg1);
  public final static native int CountBasicBlocks(long jarg1);
  public final static native void GetBasicBlocks(long jarg1, long jarg2, BasicBlockRefArray jarg2_);
  public final static native long GetFirstBasicBlock(long jarg1);
  public final static native long GetLastBasicBlock(long jarg1);
  public final static native long GetNextBasicBlock(long jarg1);
  public final static native long GetPreviousBasicBlock(long jarg1);
  public final static native long GetEntryBasicBlock(long jarg1);
  public final static native long AppendBasicBlockInContext(long jarg1, long jarg2, String jarg3);
  public final static native long AppendBasicBlock(long jarg1, String jarg2);
  public final static native long InsertBasicBlockInContext(long jarg1, long jarg2, String jarg3);
  public final static native long InsertBasicBlock(long jarg1, String jarg2);
  public final static native void DeleteBasicBlock(long jarg1);
  public final static native void RemoveBasicBlockFromParent(long jarg1);
  public final static native void MoveBasicBlockBefore(long jarg1, long jarg2);
  public final static native void MoveBasicBlockAfter(long jarg1, long jarg2);
  public final static native long GetFirstInstruction(long jarg1);
  public final static native long GetLastInstruction(long jarg1);
  public final static native int HasMetadata(long jarg1);
  public final static native long GetMetadata(long jarg1, int jarg2);
  public final static native void SetMetadata(long jarg1, int jarg2, long jarg3);
  public final static native long GetInstructionParent(long jarg1);
  public final static native long GetNextInstruction(long jarg1);
  public final static native long GetPreviousInstruction(long jarg1);
  public final static native void InstructionEraseFromParent(long jarg1);
  public final static native int GetInstructionOpcode(long jarg1);
  public final static native int GetICmpPredicate(long jarg1);
  public final static native void SetInstructionCallConv(long jarg1, int jarg2);
  public final static native int GetInstructionCallConv(long jarg1);
  public final static native void AddInstrAttribute(long jarg1, int jarg2, int jarg3);
  public final static native void RemoveInstrAttribute(long jarg1, int jarg2, int jarg3);
  public final static native void SetInstrParamAlignment(long jarg1, int jarg2, int jarg3);
  public final static native boolean IsTailCall(long jarg1);
  public final static native void SetTailCall(long jarg1, boolean jarg2);
  public final static native long GetSwitchDefaultDest(long jarg1);
  public final static native void AddIncoming(long jarg1, long jarg2, ValueRefArray jarg2_, long jarg3, BasicBlockRefArray jarg3_, int jarg4);
  public final static native int CountIncoming(long jarg1);
  public final static native long GetIncomingValue(long jarg1, int jarg2);
  public final static native long GetIncomingBlock(long jarg1, int jarg2);
  public final static native long CreateBuilderInContext(long jarg1);
  public final static native long CreateBuilder();
  public final static native void PositionBuilder(long jarg1, long jarg2, long jarg3);
  public final static native void PositionBuilderBefore(long jarg1, long jarg2);
  public final static native void PositionBuilderAtEnd(long jarg1, long jarg2);
  public final static native long GetInsertBlock(long jarg1);
  public final static native void ClearInsertionPosition(long jarg1);
  public final static native void InsertIntoBuilder(long jarg1, long jarg2);
  public final static native void InsertIntoBuilderWithName(long jarg1, long jarg2, String jarg3);
  public final static native void DisposeBuilder(long jarg1);
  public final static native void SetCurrentDebugLocation(long jarg1, long jarg2);
  public final static native long GetCurrentDebugLocation(long jarg1);
  public final static native void SetInstDebugLocation(long jarg1, long jarg2);
  public final static native long BuildRetVoid(long jarg1);
  public final static native long BuildRet(long jarg1, long jarg2);
  public final static native long BuildAggregateRet(long jarg1, long jarg2, ValueRefArray jarg2_, int jarg3);
  public final static native long BuildBr(long jarg1, long jarg2);
  public final static native long BuildCondBr(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long BuildSwitch(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long BuildIndirectBr(long jarg1, long jarg2, int jarg3);
  public final static native long BuildInvoke(long jarg1, long jarg2, long jarg3, ValueRefArray jarg3_, int jarg4, long jarg5, long jarg6, String jarg7);
  public final static native long BuildLandingPad(long jarg1, long jarg2, long jarg3, int jarg4, String jarg5);
  public final static native long BuildResume(long jarg1, long jarg2);
  public final static native long BuildUnreachable(long jarg1);
  public final static native void AddCase(long jarg1, long jarg2, long jarg3);
  public final static native void AddDestination(long jarg1, long jarg2);
  public final static native void AddClause(long jarg1, long jarg2);
  public final static native void SetCleanup(long jarg1, boolean jarg2);
  public final static native long BuildAdd(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildNSWAdd(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildNUWAdd(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFAdd(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildSub(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildNSWSub(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildNUWSub(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFSub(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildMul(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildNSWMul(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildNUWMul(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFMul(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildUDiv(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildSDiv(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildExactSDiv(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFDiv(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildURem(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildSRem(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFRem(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildShl(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildLShr(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildAShr(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildAnd(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildOr(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildXor(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildBinOp(long jarg1, int jarg2, long jarg3, long jarg4, String jarg5);
  public final static native long BuildNeg(long jarg1, long jarg2, String jarg3);
  public final static native long BuildNSWNeg(long jarg1, long jarg2, String jarg3);
  public final static native long BuildNUWNeg(long jarg1, long jarg2, String jarg3);
  public final static native long BuildFNeg(long jarg1, long jarg2, String jarg3);
  public final static native long BuildNot(long jarg1, long jarg2, String jarg3);
  public final static native long BuildMalloc(long jarg1, long jarg2, String jarg3);
  public final static native long BuildArrayMalloc(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildAlloca(long jarg1, long jarg2, String jarg3);
  public final static native long BuildArrayAlloca(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFree(long jarg1, long jarg2);
  public final static native long BuildLoad(long jarg1, long jarg2, String jarg3);
  public final static native long BuildStore(long jarg1, long jarg2, long jarg3);
  public final static native long BuildGEP(long jarg1, long jarg2, long jarg3, ValueRefArray jarg3_, int jarg4, String jarg5);
  public final static native long BuildInBoundsGEP(long jarg1, long jarg2, long jarg3, ValueRefArray jarg3_, int jarg4, String jarg5);
  public final static native long BuildStructGEP(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native long BuildGlobalString(long jarg1, String jarg2, String jarg3);
  public final static native long BuildGlobalStringPtr(long jarg1, String jarg2, String jarg3);
  public final static native boolean GetVolatile(long jarg1);
  public final static native void SetVolatile(long jarg1, boolean jarg2);
  public final static native long BuildTrunc(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildZExt(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildSExt(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFPToUI(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFPToSI(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildUIToFP(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildSIToFP(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFPTrunc(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFPExt(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildPtrToInt(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildIntToPtr(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildBitCast(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildZExtOrBitCast(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildSExtOrBitCast(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildTruncOrBitCast(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildCast(long jarg1, int jarg2, long jarg3, long jarg4, String jarg5);
  public final static native long BuildPointerCast(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildIntCast(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildFPCast(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildICmp(long jarg1, int jarg2, long jarg3, long jarg4, String jarg5);
  public final static native long BuildFCmp(long jarg1, int jarg2, long jarg3, long jarg4, String jarg5);
  public final static native long BuildPhi(long jarg1, long jarg2, String jarg3);
  public final static native long BuildCall(long jarg1, long jarg2, long jarg3, ValueRefArray jarg3_, int jarg4, String jarg5);
  public final static native long BuildSelect(long jarg1, long jarg2, long jarg3, long jarg4, String jarg5);
  public final static native long BuildVAArg(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildExtractElement(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildInsertElement(long jarg1, long jarg2, long jarg3, long jarg4, String jarg5);
  public final static native long BuildShuffleVector(long jarg1, long jarg2, long jarg3, long jarg4, String jarg5);
  public final static native long BuildExtractValue(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native long BuildInsertValue(long jarg1, long jarg2, long jarg3, int jarg4, String jarg5);
  public final static native long BuildIsNull(long jarg1, long jarg2, String jarg3);
  public final static native long BuildIsNotNull(long jarg1, long jarg2, String jarg3);
  public final static native long BuildPtrDiff(long jarg1, long jarg2, long jarg3, String jarg4);
  public final static native long BuildAtomicRMW(long jarg1, int jarg2, long jarg3, long jarg4, int jarg5, boolean jarg6);
  public final static native long CreateModuleProviderForExistingModule(long jarg1);
  public final static native void DisposeModuleProvider(long jarg1);
  public final static native boolean CreateMemoryBufferWithContentsOfFile(String jarg1, long jarg2, MemoryBufferRefOut jarg2_, long jarg3, StringOut jarg3_);
  public final static native boolean CreateMemoryBufferWithSTDIN(long jarg1, MemoryBufferRefOut jarg1_, long jarg2, StringOut jarg2_);
  public final static native long CreateMemoryBufferWithMemoryRange(byte[] jarg1, String jarg3, boolean jarg4);
  public final static native long CreateMemoryBufferWithMemoryRangeCopy(byte[] jarg1, String jarg3);
  public final static native String GetBufferStart(long jarg1);
  public final static native long GetBufferSize(long jarg1);
  public final static native void DisposeMemoryBuffer(long jarg1);
  public final static native long GetGlobalPassRegistry();
  public final static native long CreatePassManager();
  public final static native long CreateFunctionPassManagerForModule(long jarg1);
  public final static native long CreateFunctionPassManager(long jarg1);
  public final static native boolean RunPassManager(long jarg1, long jarg2);
  public final static native boolean InitializeFunctionPassManager(long jarg1);
  public final static native boolean RunFunctionPassManager(long jarg1, long jarg2);
  public final static native boolean FinalizeFunctionPassManager(long jarg1);
  public final static native void DisposePassManager(long jarg1);
  public final static native boolean StartMultithreaded();
  public final static native void StopMultithreaded();
  public final static native boolean IsMultithreaded();
  public final static native boolean ParseBitcode(long jarg1, long jarg2, ModuleRefOut jarg2_, long jarg3, StringOut jarg3_);
  public final static native boolean ParseBitcodeInContext(long jarg1, long jarg2, long jarg3, ModuleRefOut jarg3_, long jarg4, StringOut jarg4_);
  public final static native boolean GetBitcodeModuleInContext(long jarg1, long jarg2, long jarg3, ModuleRefOut jarg3_, long jarg4, StringOut jarg4_);
  public final static native boolean GetBitcodeModule(long jarg1, long jarg2, ModuleRefOut jarg2_, long jarg3, StringOut jarg3_);
  public final static native int WriteBitcodeToFile(long jarg1, String jarg2);
  public final static native int WriteBitcodeToFD(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native void AddArgumentPromotionPass(long jarg1);
  public final static native void AddConstantMergePass(long jarg1);
  public final static native void AddDeadArgEliminationPass(long jarg1);
  public final static native void AddFunctionAttrsPass(long jarg1);
  public final static native void AddFunctionInliningPass(long jarg1);
  public final static native void AddAlwaysInlinerPass(long jarg1);
  public final static native void AddGlobalDCEPass(long jarg1);
  public final static native void AddGlobalOptimizerPass(long jarg1);
  public final static native void AddIPConstantPropagationPass(long jarg1);
  public final static native void AddPruneEHPass(long jarg1);
  public final static native void AddIPSCCPPass(long jarg1);
  public final static native void AddInternalizePass(long jarg1, int jarg2);
  public final static native void AddStripDeadPrototypesPass(long jarg1);
  public final static native void AddStripSymbolsPass(long jarg1);
  public final static native long PassManagerBuilderCreate();
  public final static native void PassManagerBuilderDispose(long jarg1);
  public final static native void PassManagerBuilderSetOptLevel(long jarg1, int jarg2);
  public final static native void PassManagerBuilderSetSizeLevel(long jarg1, int jarg2);
  public final static native void PassManagerBuilderSetDisableUnitAtATime(long jarg1, boolean jarg2);
  public final static native void PassManagerBuilderSetDisableUnrollLoops(long jarg1, boolean jarg2);
  public final static native void PassManagerBuilderSetDisableSimplifyLibCalls(long jarg1, boolean jarg2);
  public final static native void PassManagerBuilderUseInlinerWithThreshold(long jarg1, int jarg2);
  public final static native void PassManagerBuilderPopulateFunctionPassManager(long jarg1, long jarg2);
  public final static native void PassManagerBuilderPopulateModulePassManager(long jarg1, long jarg2);
  public final static native void PassManagerBuilderPopulateLTOPassManager(long jarg1, long jarg2, boolean jarg3, boolean jarg4);
  public final static native void AddAggressiveDCEPass(long jarg1);
  public final static native void AddCFGSimplificationPass(long jarg1);
  public final static native void AddDeadStoreEliminationPass(long jarg1);
  public final static native void AddGVNPass(long jarg1);
  public final static native void AddIndVarSimplifyPass(long jarg1);
  public final static native void AddInstructionCombiningPass(long jarg1);
  public final static native void AddJumpThreadingPass(long jarg1);
  public final static native void AddLICMPass(long jarg1);
  public final static native void AddLoopDeletionPass(long jarg1);
  public final static native void AddLoopIdiomPass(long jarg1);
  public final static native void AddLoopRotatePass(long jarg1);
  public final static native void AddLoopUnrollPass(long jarg1);
  public final static native void AddLoopUnswitchPass(long jarg1);
  public final static native void AddMemCpyOptPass(long jarg1);
  public final static native void AddPromoteMemoryToRegisterPass(long jarg1);
  public final static native void AddReassociatePass(long jarg1);
  public final static native void AddSCCPPass(long jarg1);
  public final static native void AddScalarReplAggregatesPass(long jarg1);
  public final static native void AddScalarReplAggregatesPassSSA(long jarg1);
  public final static native void AddScalarReplAggregatesPassWithThreshold(long jarg1, int jarg2);
  public final static native void AddSimplifyLibCallsPass(long jarg1);
  public final static native void AddTailCallEliminationPass(long jarg1);
  public final static native void AddConstantPropagationPass(long jarg1);
  public final static native void AddDemoteMemoryToRegisterPass(long jarg1);
  public final static native void AddVerifierPass(long jarg1);
  public final static native void AddCorrelatedValuePropagationPass(long jarg1);
  public final static native void AddEarlyCSEPass(long jarg1);
  public final static native void AddLowerExpectIntrinsicPass(long jarg1);
  public final static native void AddTypeBasedAliasAnalysisPass(long jarg1);
  public final static native void AddBasicAliasAnalysisPass(long jarg1);
  public final static native void AddBBVectorizePass(long jarg1);
  public final static native void AddLoopVectorizePass(long jarg1);
  public final static native void AddSLPVectorizePass(long jarg1);
  public final static native void InitializeX86TargetInfo();
  public final static native void InitializeARMTargetInfo();
  public final static native void InitializeX86AsmPrinter();
  public final static native void InitializeARMAsmPrinter();
  public final static native void InitializeX86AsmParser();
  public final static native void InitializeARMAsmParser();
  public final static native void InitializeX86Disassembler();
  public final static native void InitializeARMDisassembler();
  public final static native void InitializeAllTargetInfos();
  public final static native void InitializeAllTargets();
  public final static native void InitializeAllTargetMCs();
  public final static native void InitializeAllAsmPrinters();
  public final static native void InitializeAllAsmParsers();
  public final static native void InitializeAllDisassemblers();
  public final static native long CreateTargetData(String jarg1);
  public final static native void AddTargetData(long jarg1, long jarg2);
  public final static native void AddTargetLibraryInfo(long jarg1, long jarg2);
  public final static native String CopyStringRepOfTargetData(long jarg1);
  public final static native int ByteOrder(long jarg1);
  public final static native int PointerSize(long jarg1);
  public final static native int PointerSizeForAS(long jarg1, int jarg2);
  public final static native long IntPtrType(long jarg1);
  public final static native long IntPtrTypeForAS(long jarg1, int jarg2);
  public final static native java.math.BigInteger SizeOfTypeInBits(long jarg1, long jarg2);
  public final static native java.math.BigInteger StoreSizeOfType(long jarg1, long jarg2);
  public final static native java.math.BigInteger ABISizeOfType(long jarg1, long jarg2);
  public final static native int ABIAlignmentOfType(long jarg1, long jarg2);
  public final static native int CallFrameAlignmentOfType(long jarg1, long jarg2);
  public final static native int PreferredAlignmentOfType(long jarg1, long jarg2);
  public final static native int PreferredAlignmentOfGlobal(long jarg1, long jarg2);
  public final static native int ElementAtOffset(long jarg1, long jarg2, java.math.BigInteger jarg3);
  public final static native java.math.BigInteger OffsetOfElement(long jarg1, long jarg2, int jarg3);
  public final static native void DisposeTargetData(long jarg1);
  public final static native long GetFirstTarget();
  public final static native long GetNextTarget(long jarg1);
  public final static native String GetTargetName(long jarg1);
  public final static native String GetTargetDescription(long jarg1);
  public final static native boolean TargetHasJIT(long jarg1);
  public final static native boolean TargetHasTargetMachine(long jarg1);
  public final static native boolean TargetHasAsmBackend(long jarg1);
  public final static native long CreateTargetMachine(long jarg1, String jarg2, String jarg3, String jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void DisposeTargetMachine(long jarg1);
  public final static native long GetTargetMachineTarget(long jarg1);
  public final static native String GetTargetMachineTriple(long jarg1);
  public final static native String GetTargetMachineCPU(long jarg1);
  public final static native String GetTargetMachineFeatureString(long jarg1);
  public final static native long GetTargetMachineData(long jarg1);
  public final static native boolean TargetMachineEmitToFile(long jarg1, long jarg2, String jarg3, int jarg4, long jarg5, StringOut jarg5_);
  public final static native boolean TargetMachineEmitToMemoryBuffer(long jarg1, long jarg2, int jarg3, long jarg4, StringOut jarg4_, long jarg5, MemoryBufferRefOut jarg5_);
  public final static native String llvmHostTriple_get();
  public final static native boolean ParseIR(long jarg1, long jarg2, ModuleRefOut jarg2_, long jarg3, StringOut jarg3_);
  public final static native boolean ParseIRInContext(long jarg1, long jarg2, long jarg3, ModuleRefOut jarg3_, long jarg4, StringOut jarg4_);
  public final static native long LookupTarget(String jarg1, long jarg2, StringOut jarg2_);
  public final static native boolean TargetMachineHasMCRelaxAll(long jarg1);
  public final static native void TargetMachineSetMCRelaxAll(long jarg1, boolean jarg2);
  public final static native boolean TargetMachineHasMCSaveTempLabels(long jarg1);
  public final static native void TargetMachineSetMCSaveTempLabels(long jarg1, boolean jarg2);
  public final static native boolean TargetMachineHasMCNoExecStack(long jarg1);
  public final static native void TargetMachineSetMCNoExecStack(long jarg1, boolean jarg2);
  public final static native boolean TargetMachineHasMCUseLoc(long jarg1);
  public final static native void TargetMachineSetMCUseLoc(long jarg1, boolean jarg2);
  public final static native boolean TargetMachineHasMCUseCFI(long jarg1);
  public final static native void TargetMachineSetMCUseCFI(long jarg1, boolean jarg2);
  public final static native boolean TargetMachineHasMCUseDwarfDirectory(long jarg1);
  public final static native void TargetMachineSetMCUseDwarfDirectory(long jarg1, boolean jarg2);
  public final static native boolean TargetMachineGetAsmVerbosityDefault(long jarg1);
  public final static native void TargetMachineSetAsmVerbosityDefault(long jarg1, boolean jarg2);
  public final static native boolean TargetMachineGetDataSections(long jarg1);
  public final static native boolean TargetMachineGetFunctionSections(long jarg1);
  public final static native void TargetMachineSetDataSections(long jarg1, boolean jarg2);
  public final static native void TargetMachineSetFunctionSections(long jarg1, boolean jarg2);
  public final static native long GetTargetMachineTargetOptions(long jarg1);
  public final static native boolean TargetOptionsGetPrintMachineCode(long jarg1);
  public final static native void TargetOptionsSetPrintMachineCode(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetNoFramePointerElim(long jarg1);
  public final static native void TargetOptionsSetNoFramePointerElim(long jarg1, boolean jarg2);
  //public final static native boolean TargetOptionsGetNoFramePointerElimNonLeaf(long jarg1);
  //public final static native void TargetOptionsSetNoFramePointerElimNonLeaf(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetLessPreciseFPMADOption(long jarg1);
  public final static native void TargetOptionsSetLessPreciseFPMADOption(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetUnsafeFPMath(long jarg1);
  public final static native void TargetOptionsSetUnsafeFPMath(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetNoInfsFPMath(long jarg1);
  public final static native void TargetOptionsSetNoInfsFPMath(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetNoNaNsFPMath(long jarg1);
  public final static native void TargetOptionsSetNoNaNsFPMath(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetHonorSignDependentRoundingFPMathOption(long jarg1);
  public final static native void TargetOptionsSetHonorSignDependentRoundingFPMathOption(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetUseSoftFloat(long jarg1);
  public final static native void TargetOptionsSetUseSoftFloat(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetNoZerosInBSS(long jarg1);
  public final static native void TargetOptionsSetNoZerosInBSS(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetJITEmitDebugInfo(long jarg1);
  public final static native void TargetOptionsSetJITEmitDebugInfo(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetJITEmitDebugInfoToDisk(long jarg1);
  public final static native void TargetOptionsSetJITEmitDebugInfoToDisk(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetGuaranteedTailCallOpt(long jarg1);
  public final static native void TargetOptionsSetGuaranteedTailCallOpt(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetDisableTailCalls(long jarg1);
  public final static native void TargetOptionsSetDisableTailCalls(long jarg1, boolean jarg2);
  public final static native int TargetOptionsGetStackAlignmentOverride(long jarg1);
  public final static native void TargetOptionsSetStackAlignmentOverride(long jarg1, int jarg2);
  //public final static native boolean TargetOptionsGetRealignStack(long jarg1);
  //public final static native void TargetOptionsSetRealignStack(long jarg1, boolean jarg2);
  //public final static native int TargetOptionsGetSSPBufferSize(long jarg1);
  //public final static native void TargetOptionsSetSSPBufferSize(long jarg1, int jarg2);
  public final static native boolean TargetOptionsGetEnableFastISel(long jarg1);
  public final static native void TargetOptionsSetEnableFastISel(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetPositionIndependentExecutable(long jarg1);
  public final static native void TargetOptionsSetPositionIndependentExecutable(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetEnableSegmentedStacks(long jarg1);
  public final static native void TargetOptionsSetEnableSegmentedStacks(long jarg1, boolean jarg2);
  public final static native boolean TargetOptionsGetUseInitArray(long jarg1);
  public final static native void TargetOptionsSetUseInitArray(long jarg1, boolean jarg2);
  public final static native int TargetOptionsGetFloatABIType(long jarg1);
  public final static native void TargetOptionsSetFloatABIType(long jarg1, int jarg2);
  public final static native int TargetOptionsGetAllowFPOpFusion(long jarg1);
  public final static native void TargetOptionsSetAllowFPOpFusion(long jarg1, int jarg2);
  public final static native int TargetMachineAssembleToOutputStream(long jarg1, long jarg2, java.io.OutputStream jarg3, boolean jarg4, boolean jarg5, long jarg6, StringOut jarg6_);
  public final static native boolean TargetMachineEmitToOutputStream(long jarg1, long jarg2, java.io.OutputStream jarg3, int jarg4, long jarg5, StringOut jarg5_);

  static {
    org.robovm.llvm.NativeLibrary.load();
  }

}
