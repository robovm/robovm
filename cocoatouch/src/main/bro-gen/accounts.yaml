package: org.robovm.apple.accounts
include: [foundation.yaml]
library: Accounts
framework: Accounts
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/Accounts.framework/Headers/Accounts.h
    - /System/Library/Frameworks/Accounts.framework/Headers/AccountsDefines.h
typedefs: {}
    
enums:
    ACErrorCode: {}
    ACAccountCredentialRenewResult: {}
        
classes:
    ACError:
        extends: NSError

    ACAccount:
        methods:
            '-initWithAccountType:':
                name: init
    ACAccountCredential:
        methods:
            '-init.*':
                name: init
    ACAccountStore:
        properties:
            'accounts':
                type: NSArray<ACAccount>
        methods:
            '-accountWithIdentifier:':
                name: getAccount
            '-accountTypeWithAccountTypeIdentifier:':
                name: getAccountType
                parameters:
                    typeIdentifier:
                        type: ACAccountTypeIdentifier
            '-accountsWithAccountType:':
                name: getAccounts
                return_type: NSArray<ACAccount>
            '-saveAccount:withCompletionHandler:':
                name: saveAccount
                parameters:
                    completionHandler:
                        type: '@Block VoidBlock2<Boolean, NSError>'
            '-requestAccessToAccountsWithType:withCompletionHandler:':
                name: requestAccessToAccounts
                parameters:
                    handler:
                        type: '@Block VoidBlock2<Boolean, NSError>'                   
            '-requestAccessToAccountsWithType:options:completion:':
                name: requestAccessToAccounts
                visibility: protected
                parameters:
                   options:
                        type: 'NSDictionary<NSString, ?>'
                   completion:
                        type: '@Block VoidBlock2<Boolean, NSError>'              
            '-renewCredentialsForAccount:completion:':
                name: renewCredentials
                parameters:
                    completionHandler:
                        type: '@Block VoidBlock2<ACAccountCredentialRenewResult, NSError>' 
            '-removeAccount:withCompletionHandler:':
                name: removeAccount
                parameters:
                    completionHandler:
                        type: '@Block VoidBlock2<Boolean, NSError>'
    ACAccountType: # DONE
        properties:
            'identifier':
                type: ACAccountTypeIdentifier
                
    ACAccountOptions: {}
    ACFacebookOptions:
        extends: ACAccountOptions
    ACTencentWeiboOptions:
        extends: ACAccountOptions

protocols: {}

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?AC.*):
        class: Accounts
        name: 'Function__#{g[0]}'

values:
    ACAccountTypeIdentifier(.*):
        class: ACAccountTypeIdentifier
        name: '#{g[0]}Value'
        type: NSString
        visibility: protected
        
    ACFacebook(.*Key):
        class: ACFacebookOptions
        name: '#{g[0]}'
        type: NSString
        visibility: protected
    ACFacebookAudience(.*):
        class: ACFacebookAudience
        name: '#{g[0]}Value'
        type: NSString
        visibility: protected
        
    ACTencentWeibo(.*Key):
        class: ACTencentWeiboOptions
        name: '#{g[0]}'
        type: NSString
        visibility: protected
        
    ACAccountStore(DidChangeNotification):
        class: ACAccountStore
        type: NSString
        name: '#{g[0]}'
        
    ACErrorDomain:
        class: ACError
        name: getClassDomain
   
    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?AC.*):
        class: Accounts
        name: 'Value__#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?AC.*):
        class: Accounts
        name: 'Constant__#{g[0]}'
