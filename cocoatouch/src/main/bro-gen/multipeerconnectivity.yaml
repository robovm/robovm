package: org.robovm.apple.multipeerconnectivity
include: [foundation.yaml, uikit.yaml, security.yaml]
library: MultipeerConnectivity
framework: MultipeerConnectivity
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/MultipeerConnectivity.framework/Headers/MultipeerConnectivity.h
typedefs:
    'void (^)(BOOL, MCSession *)': '@Block VoidBlock2<Boolean, MCSession>'
    'void (^)(NSData *, NSError *)': '@Block VoidBlock2<NSData, NSError>'
    
enums:
    MCErrorCode: {}
    MCSessionSendDataMode: {}
    MCSessionState: {}
    MCEncryptionPreference: {}
        
classes:
    MCError:
        extends: NSError

    MCAdvertiserAssistant: # DONE
        properties:
            'discoveryInfo':
                type: '@org.robovm.rt.bro.annotation.Marshaler(NSDictionary.AsStringStringMapMarshaler.class) Map<String, String>'
        methods:
            '-initWithServiceType:discoveryInfo:session:':
                name: init
                parameters:
                    info:
                        type: '@org.robovm.rt.bro.annotation.Marshaler(NSDictionary.AsStringStringMapMarshaler.class) Map<String, String>'
    MCBrowserViewController: # DONE
        methods:
            '-init.*':
                name: init
            '-browser:foundPeer:withDiscoveryInfo:':
                name: foundPeer
                parameters:
                    info:
                        type: '@org.robovm.rt.bro.annotation.Marshaler(NSDictionary.AsStringStringMapMarshaler.class) Map<String, String>'
            '-browser:lostPeer:':
                name: lostPeer
            '-browser:didNotStartBrowsingForPeers:':
                name: didNotStartBrowsing
    MCNearbyServiceAdvertiser: # DONE
        properties:
            'discoveryInfo':
                type: '@org.robovm.rt.bro.annotation.Marshaler(NSDictionary.AsStringStringMapMarshaler.class) Map<String, String>'
        methods:
            '-initWithPeer:discoveryInfo:serviceType:':
                name: init
                parameters:
                    info:
                        type: '@org.robovm.rt.bro.annotation.Marshaler(NSDictionary.AsStringStringMapMarshaler.class) Map<String, String>'
    MCNearbyServiceBrowser: # DONE
        methods:
            '-init.*':
                name: init
            '-startBrowsingForPeers':
                name: startBrowsing
            '-stopBrowsingForPeers':
                name: stopBrowsing
            '-invitePeer:toSession:withContext:timeout:':
                name: invitePeer
    MCPeerID: # DONE
        methods:
            '-init.*':
                name: init
    MCSession: # DONE
        properties:
            'securityIdentity':
                type: '@org.robovm.rt.bro.annotation.Marshaler(NSArray.AsListMarshaler.class) List<SecIdentity>'
            'connectedPeers':
                type: NSArray<MCPeerID>
        methods:
            '-initWithPeer:':
                name: init
            '-initWithPeer:securityIdentity:encryptionPreference:':
                name: init
                parameters:
                    identity:
                        type: '@org.robovm.rt.bro.annotation.Marshaler(NSArray.AsListMarshaler.class) List<SecIdentity>'
            '-sendData:toPeers:withMode:error:':
                trim_after_first_colon: true
                throws: NSErrorException
                parameters:
                    peerIDs:
                        type: NSArray<MCPeerID>
            '-sendResourceAtURL:withName:toPeer:withCompletionHandler:':
                name: sendResource
            '-startStreamWithName:toPeer:error:':
                name: startStream
                throws: NSErrorException
            '-nearbyConnectionDataForPeer:withCompletionHandler:':
                name: requestNearbyConnectionData
            '-connectPeer:withNearbyConnectionData:':
                trim_after_first_colon: true
            '-cancelConnectPeer:':
                trim_after_first_colon: true

protocols:
    MCAdvertiserAssistantDelegate: # DONE
        methods:
            '-advertiserAssistantWillPresentInvitation:':
                name: willPresentInvitation
            '-advertiserAssistantDidDismissInvitation:':
                name: didDismissInvitation
    MCBrowserViewControllerDelegate: # DONE
        methods:
            '-browserViewControllerDidFinish:':
                name: didFinish
            '-browserViewControllerWasCancelled:':
                name: wasCancelled
            '-browserViewController:shouldPresentNearbyPeer:withDiscoveryInfo:':
                name: shouldPresentNearbyPeer
                parameters:
                    info:
                        type: '@org.robovm.rt.bro.annotation.Marshaler(NSDictionary.AsStringStringMapMarshaler.class) Map<String, String>'
    MCNearbyServiceAdvertiserDelegate: # DONE
        methods:
            '-advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:':
                name: didReceiveInvitation
            '-advertiser:didNotStartAdvertisingPeer:':
                name: didNotStart
    MCNearbyServiceBrowserDelegate: # DONE
        methods:
            '-browser:foundPeer:withDiscoveryInfo:':
                name: foundPeer
                parameters:
                    info:
                        type: '@org.robovm.rt.bro.annotation.Marshaler(NSDictionary.AsStringStringMapMarshaler.class) Map<String, String>'
            '-browser:lostPeer:':
                name: lostPeer
            '-browser:didNotStartBrowsingForPeers:':
                name: didNotStartBrowsing 
    MCSessionDelegate: # DONE
        methods:
            '-session:peer:didChangeState:':
                name: didChangeState
            '-session:didReceiveData:fromPeer:':
                name: didReceiveData
            '-session:didReceiveStream:withName:fromPeer:':
                name: didReceiveStream
            '-session:didStartReceivingResourceWithName:fromPeer:withProgress:':
                name: didStartReceivingResource
            '-session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:':
                name: didFinishReceivingResource
            '-session:didReceiveCertificate:fromPeer:certificateHandler:':
                name: didReceiveCertificate
                parameters:
                    certificate:
                        type: '@org.robovm.rt.bro.annotation.Marshaler(NSArray.AsListMarshaler.class) List<SecIdentity>'

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?MC.*):
        class: MultipeerConnectivity
        name: 'Function__#{g[0]}'

values:
    MCErrorDomain:
        class: MCError
        name: getClassDomain

    # MCSession
    kMCSession(.*):
        class: MCSession
        name: 'get#{g[0]}'

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?MC.*):
        class: MultipeerConnectivity
        name: 'Value__#{g[0]}'

constants:

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?MC.*):
        class: MultipeerConnectivity
        name: 'Constant__#{g[0]}'
