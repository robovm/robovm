package: org.robovm.apple.coremotion
include: [foundation.yaml]
library: CoreMotion
framework: CoreMotion
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/CoreMotion.framework/Headers/CoreMotion.h
    - /System/Library/Frameworks/CoreMotion.framework/Headers/CMAvailability.h
typedefs: {}
    
enums:
    CMAttitudeReferenceFrame: { first: CMAttitudeReferenceFrameXArbitraryZVertical, bits: true, marshaler: Bits.AsMachineSizedIntMarshaler }
    CMMagneticFieldCalibrationAccuracy: { first: CMMagneticFieldCalibrationAccuracyUncalibrated }
    CMErrorCode: { first: CMErrorNULL }
    CMMotionActivityConfidence: {}
        
classes:
    CMError:
        extends: NSError

    CMAccelerometerData: {} # DONE
    CMAltimeter: # DONE
        methods:
            '-startRelativeAltitudeUpdatesToQueue:withHandler:':
                name: startRelativeAltitudeUpdates
                parameters:
                    handler:
                        type: '@Block VoidBlock2<CMAltitudeData, NSError>'
    CMAltitudeData: {} # DONE
    CMAttitude: # DONE
        methods:
            '-multiplyByInverseOfAttitude:':
                trim_after_first_colon: true
    CMDeviceMotion: {} # DONE
    CMGyroData: {} # DONE
    CMLogItem: {} # DONE
    CMMagnetometerData: {} # DONE
    CMMotionActivity: {} # DONE
    CMMotionActivityManager: # DONE
        methods:
            '-queryActivityStartingFromDate:toDate:toQueue:withHandler:':
                name: queryActivity
                parameters:
                    handler:
                        type: '@Block VoidBlock2<NSArray<CMMotionActivity>, NSError>'
            '-startActivityUpdatesToQueue:withHandler:':
                name: startActivityUpdates
                parameters:
                    handler:
                        type: '@Block VoidBlock1<CMMotionActivity>'
    CMMotionManager: # DONE
        methods:
            '-startAccelerometerUpdatesToQueue:withHandler:':
                name: startAccelerometerUpdates
                parameters:
                    handler:
                        type: '@Block VoidBlock2<CMAccelerometerData, NSError>'
            '-startGyroUpdatesToQueue:withHandler:':
                name: startGyroUpdates
                parameters:
                    handler:
                        type: '@Block VoidBlock2<CMGyroData, NSError>'
            '-startMagnetometerUpdatesToQueue:withHandler:':
                name: startMagnetometerUpdates
                parameters:
                    handler:
                        type: '@Block VoidBlock2<CMMagnetometerData, NSError>'
            '-startDeviceMotionUpdatesToQueue:withHandler:':
                name: startDeviceMotionUpdates
                parameters:
                    handler:
                        type: '@Block VoidBlock2<CMDeviceMotion, NSError>'
            '-startDeviceMotionUpdatesUsingReferenceFrame:':
                name: startDeviceMotionUpdates
            '-startDeviceMotionUpdatesUsingReferenceFrame:toQueue:withHandler:':
                name: startDeviceMotionUpdates
                parameters:
                    handler:
                        type: '@Block VoidBlock2<CMDeviceMotion, NSError>'
            '+availableAttitudeReferenceFrames':
                property: true
    CMPedometer: # DONE
        methods:
            '-queryPedometerDataFromDate:toDate:withHandler:':
                name: queryPedometerData
                parameters:
                    handler:
                        type: '@Block VoidBlock2<CMPedometerData, NSError>'
            '-startPedometerUpdatesFromDate:withHandler:':
                name: startPedometerUpdates
                parameters:
                    handler:
                        type: '@Block VoidBlock2<CMPedometerData, NSError>'
    CMPedometerData: {}
    CMStepCounter: # DONE
        methods:
            '-queryStepCountStartingFrom:to:toQueue:withHandler:':
                name: queryStepCount
                parameters:
                    handler:
                        type: '@Block("(@MachineSizedSInt,)") VoidBlock2<Long, NSError>'
            '-startStepCountingUpdatesToQueue:updateOn:withHandler:':
                name: startStepCountingUpdates
                parameters:
                    handler:
                        type: '@Block("(@MachineSizedSInt,,)") VoidBlock3<Long, NSDate, NSError>'

    # Structs
    CMAcceleration: {}
    CMRotationMatrix: {}
    CMQuaternion: {}
    CMCalibratedMagneticField: {}
    CMRotationRate: {}
    CMMagneticField: {}

protocols: {}


functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?CM.*):
        class: CoreMotion
        name: 'Function__#{g[0]}'

values:
    CMErrorDomain:
        class: CMError
        name: getClassDomain
   
    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?CM.*):
        class: CoreMotion
        name: 'Value__#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?CM.*):
        class: CoreMotion
        name: 'Constant__#{g[0]}'
